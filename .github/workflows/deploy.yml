name: Build and Deploy Spring Boot to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üì¶ Checkout repository
      uses: actions/checkout@v4

    - name: ‚òï Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: üõ†Ô∏è Build with Maven
      run: mvn clean package -DskipTests

    - name: üöö Copy JAR to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "target/*.jar"
        target: "/home/ubuntu/springboot-app/"
        strip_components: 1
        overwrite: true

    - name: üîÅ Deploy with systemd
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        timeout: 30s
        command_timeout: 10m
        script: |
          echo "üîç Setting up Spring Boot application with systemd and New Relic..."
          cd /home/ubuntu/springboot-app/
          
          # Find the JAR file
          JAR_FILE=$(ls -1 *.jar | head -1)
          if [ -z "$JAR_FILE" ]; then
            echo "‚ùå No JAR file found in $(pwd)!"
            ls -la
            exit 1
          fi
          echo "üì¶ Found JAR file: $JAR_FILE"
          
          # Stop the existing service if it's running
          echo "üõë Stopping existing springboot-app service..."
          sudo systemctl stop springboot-app || echo "Service was not running"
          
          # Start the service
          echo "üöÄ Starting springboot-app service with New Relic..."
          sudo systemctl start springboot-app
          
          # Wait a moment for the service to start
          echo "‚è≥ Waiting for service to start..."
          sleep 15
          
          # Check service status
          echo "üìä Service status:"
          sudo systemctl status springboot-app --no-pager -l
          
          # Show recent logs
          echo "üìÑ Recent systemd logs:"
          sudo journalctl -u springboot-app -n 30 --no-pager
          
          # Check if Spring Boot application logs are being created
          echo "üìÑ Checking Spring Boot application logs..."
          if [ -f "/home/ubuntu/springboot-app/logs/application.log" ]; then
            echo "‚úÖ Spring Boot logs found - showing last 10 lines:"
            tail -n 10 /home/ubuntu/springboot-app/logs/application.log
          else
            echo "‚è≥ Spring Boot log file not created yet (this is normal on first startup)"
          fi
          
          # Test if the application is responding
          echo "üåê Testing application health..."
          sleep 5
          
          # Test the health endpoint
          if curl -f -s http://localhost:8080/actuator/health > /dev/null; then
            echo "‚úÖ Health check passed - Application is running!"
          else
            echo "‚ö†Ô∏è  Health check failed - Testing main endpoint..."
            # Try a simple curl to see if the app is at least responding
            if curl -f -s -o /dev/null http://localhost:8080/; then
              echo "‚úÖ Application is responding on port 8080"
            else
              echo "‚ùå Application is not responding. Check logs above."
              echo "üîç Process status:"
              ps aux | grep java || echo "No Java processes found"
              echo "üîç Port status:"
              sudo netstat -tlnp | grep 8080 || echo "Port 8080 not in use"
            fi
          fi
          
          # Check if New Relic agent is working
          echo "üîç Checking New Relic agent initialization..."
          sudo journalctl -u springboot-app | grep -i "new relic" | tail -5 || echo "No New Relic logs found yet"
          
          echo "üéØ Deployment complete!"
          echo "üìã Useful commands for managing the service:"
          echo "  sudo systemctl status springboot-app     # Check status"
          echo "  sudo systemctl restart springboot-app    # Restart service"
          echo "  sudo systemctl stop springboot-app       # Stop service"
          echo "  sudo journalctl -u springboot-app -f     # Follow systemd logs"
          echo "  tail -f /home/ubuntu/springboot-app/logs/application.log  # Follow application logs"
          echo "  sudo journalctl -u springboot-app | grep -i 'new relic'  # Check New Relic logs"