# Database Configuration
spring.datasource.url=jdbc:postgresql://iplogger-db.cho2ac00805v.eu-north-1.rds.amazonaws.com:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=Newrelic1!
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

#Prometheus Management endpoint
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true

# Micrometer Metrics Configuration
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.slo.http.server.requests=50ms,100ms,200ms,300ms,500ms,1s,2s,5s,10s,20s,30s,60s

# Database Connection Pool Settings (REDUCED for bottleneck creation)
# spring.datasource.hikari.maximum-pool-size=2
# spring.datasource.hikari.minimum-idle=1
# spring.datasource.hikari.connection-timeout=5000
# spring.datasource.hikari.idle-timeout=60000
# spring.datasource.hikari.max-lifetime=120000

# Server Configuration (REDUCED for bottleneck creation)
# server.tomcat.threads.max=3
# server.tomcat.threads.min-spare=1
# server.tomcat.max-connections=5
# server.tomcat.connection-timeout=3000

# =================================================================
# ENHANCED CONFIGURABLE LOAD TESTING PARAMETERS
# =================================================================
# Note: Load enable/disable flags are controlled via API parameters
# The following parameters control the intensity of each load type

# Consistent Operations Count (X) - Used for both reads and writes
app.load.db.operations.count=15

# CPU Load Configuration
app.load.cpu.fibonacci.count=5
app.load.cpu.fibonacci.base=30
app.load.cpu.sorting.rounds=3
app.load.cpu.sorting.array-size=10000

# Memory Load Configuration
app.load.memory.chunks=50
app.load.memory.chunk-size-mb=2
app.load.memory.string-operations=50000
app.load.memory.hold-time-ms=1000

# Database Load Configuration (Enhanced with connection pool testing)
app.load.db.write.delay-ms=25
app.load.db.read.delay-ms=50
app.load.db.connection-pool-threads=8

# Processing Delay Configuration
app.load.delay.external-calls=3
app.load.delay.external-call-ms=300
app.load.delay.math-operations=500000

# =================================================================
# QUICK CONFIGURATION PRESETS - Uncomment the one you want to use
# =================================================================
#
# PRESET 1: LIGHT LOAD (Good for development/testing)
#app.load.db.operations.count=5
#app.load.cpu.fibonacci.count=3
#app.load.cpu.fibonacci.base=25
#app.load.memory.chunks=20
#app.load.memory.chunk-size-mb=1
#app.load.delay.external-calls=2
#app.load.delay.external-call-ms=100
#app.load.db.connection-pool-threads=3

# PRESET 2: MEDIUM LOAD (Default - Current values above)

# PRESET 3: HEAVY LOAD (Will stress system and connection pool)
#app.load.db.operations.count=25
#app.load.cpu.fibonacci.count=8
#app.load.cpu.fibonacci.base=35
#app.load.cpu.sorting.rounds=5
#app.load.memory.chunks=100
#app.load.memory.chunk-size-mb=3
#app.load.delay.external-calls=5
#app.load.delay.external-call-ms=500
#app.load.db.connection-pool-threads=15

# PRESET 4: EXTREME LOAD (May cause timeouts/connection pool exhaustion)
#app.load.db.operations.count=50
#app.load.cpu.fibonacci.count=10
#app.load.cpu.fibonacci.base=38
#app.load.memory.chunks=200
#app.load.memory.chunk-size-mb=4
#app.load.delay.external-calls=10
#app.load.delay.external-call-ms=1000
#app.load.db.connection-pool-threads=25

# PRESET 5: CONNECTION POOL SATURATION TEST
#app.load.db.operations.count=30
#app.load.db.connection-pool-threads=20
#app.load.db.write.delay-ms=100
#app.load.db.read.delay-ms=200
#spring.datasource.hikari.maximum-pool-size=5
#spring.datasource.hikari.minimum-idle=1

# PRESET 6: DATABASE INTENSIVE (Only database load with high concurrency)
#app.load.db.operations.count=40
#app.load.db.connection-pool-threads=15
#app.load.db.write.delay-ms=50
#app.load.db.read.delay-ms=75

# PRESET 7: MEMORY INTENSIVE (Only memory load)
#app.load.memory.chunks=300
#app.load.memory.chunk-size-mb=3
#app.load.memory.string-operations=200000

# PRESET 8: CPU INTENSIVE (Only CPU load)
#app.load.cpu.fibonacci.count=12
#app.load.cpu.fibonacci.base=38
#app.load.cpu.sorting.rounds=8
#app.load.cpu.sorting.array-size=100000

# =================================================================
# DATABASE CLEANUP AND MAINTENANCE SETTINGS
# =================================================================
# These settings control automatic cleanup behavior (if implemented)
app.cleanup.auto-cleanup-enabled=false
app.cleanup.max-entries=10000
app.cleanup.cleanup-interval-hours=24