# Database Configuration
spring.datasource.url=jdbc:postgresql://iplogger-db.cho2ac00805v.eu-north-1.rds.amazonaws.com:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=Newrelic1!
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

#Prometheus Management endpoint
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true

# Micrometer Metrics Configuration
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.slo.http.server.requests=50ms,100ms,200ms,300ms,500ms,1s,2s,5s,10s,20s,30s,60s

# Database Connection Pool Settings (REDUCED for bottleneck creation)
# spring.datasource.hikari.maximum-pool-size=2
# spring.datasource.hikari.minimum-idle=1
# spring.datasource.hikari.connection-timeout=5000
# spring.datasource.hikari.idle-timeout=60000
# spring.datasource.hikari.max-lifetime=120000

# Server Configuration (REDUCED for bottleneck creation)
# server.tomcat.threads.max=3
# server.tomcat.threads.min-spare=1
# server.tomcat.max-connections=5
# server.tomcat.connection-timeout=3000

# =================================================================
# CONFIGURABLE LOAD TESTING PARAMETERS
# =================================================================
# Note: Load enable/disable flags are now controlled via API parameters
# The following parameters control the intensity of each load type

# CPU Load Configuration
app.load.cpu.fibonacci.count=5
app.load.cpu.fibonacci.base=35
app.load.cpu.sorting.rounds=3
app.load.cpu.sorting.array-size=5000

# Memory Load Configuration
app.load.memory.chunks=50
app.load.memory.chunk-size-mb=1
app.load.memory.string-operations=100
app.load.memory.hold-time-ms=500

# Database Load Configuration
app.load.db.operations=30
app.load.db.records-per-operation=100

# Processing Delay Configuration
app.load.delay.external-calls=10
app.load.delay.external-call-ms=2000
app.load.delay.math-operations=100000

# =================================================================
# DATABASE CLEANUP CONFIGURATION
# =================================================================
# Number of records to keep when performing cleanup (keeps the most recent N records)
app.db.cleanup.keep-records=1000

# =================================================================
# LOGGING CONFIGURATION
# =================================================================

# Root logging level (applies to all packages unless overridden)
logging.level.root=INFO

# Application-specific logging levels
logging.level.com.example.demo=INFO
logging.level.com.example.demo.service=INFO

# Spring framework logging (reduce noise)
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.level.org.apache.tomcat=WARN

# Database logging
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Log file configuration
logging.file.name=/home/ubuntu/springboot-app/logs/application.log
logging.file.max-size=100MB
logging.file.max-history=7
logging.file.total-size-cap=500MB

# Console logging configuration
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Configure logging levels for different environments
# Uncomment the following for DEBUG mode (more detailed logs)
# logging.level.com.example.demo=DEBUG

# Uncomment the following for PRODUCTION mode (less verbose logs)
# logging.level.com.example.demo=WARN
# logging.level.com.example.demo.service.LoggingService=INFO