# Database Configuration
spring.datasource.url=jdbc:postgresql://iplogger-db.cho2ac00805v.eu-north-1.rds.amazonaws.com:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=Newrelic1!
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

#Prometheus Management endpoint
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true

# Database Connection Pool Settings (REDUCED for bottleneck creation)
# spring.datasource.hikari.maximum-pool-size=2
# spring.datasource.hikari.minimum-idle=1
# spring.datasource.hikari.connection-timeout=5000
# spring.datasource.hikari.idle-timeout=60000
# spring.datasource.hikari.max-lifetime=120000

# Server Configuration (REDUCED for bottleneck creation)
# server.tomcat.threads.max=3
# server.tomcat.threads.min-spare=1
# server.tomcat.max-connections=5
# server.tomcat.connection-timeout=3000

# =================================================================
# CONFIGURABLE LOAD TESTING PARAMETERS
# =================================================================
# Note: Load enable/disable flags are now controlled via API parameters
# The following parameters control the intensity of each load type

# CPU Load Configuration
app.load.cpu.fibonacci.count=5
app.load.cpu.fibonacci.base=35
app.load.cpu.sorting.rounds=3
app.load.cpu.sorting.array-size=500

# Memory Load Configuration
app.load.memory.chunks=100
app.load.memory.chunk-size-mb=1
app.load.memory.string-operations=100000
app.load.memory.hold-time-ms=500

# Database Load Configuration
app.load.db.write.extra-entries=10
app.load.db.write.delay-ms=10
app.load.db.read.operations=20
app.load.db.read.full-scan-interval=5
app.load.db.read.delay-ms=50

# Processing Delay Configuration
app.load.delay.external-calls=3
app.load.delay.external-call-ms=200
app.load.delay.math-operations=1000000

# =================================================================
# QUICK CONFIGURATION PRESETS - Uncomment the one you want to use
# =================================================================
#
# PRESET 1: LIGHT LOAD (Good for development/testing)
#app.load.cpu.fibonacci.count=2
#app.load.cpu.fibonacci.base=30
#app.load.memory.chunks=10
#app.load.memory.chunk-size-mb=1
#app.load.db.write.extra-entries=2
#app.load.db.read.operations=5
#app.load.delay.external-calls=1
#app.load.delay.external-call-ms=100

# PRESET 2: MEDIUM LOAD (Default - Current values above)

# PRESET 3: HEAVY LOAD (Will stress t3.micro significantly)
#app.load.cpu.fibonacci.count=8
#app.load.cpu.fibonacci.base=38
#app.load.cpu.sorting.rounds=5
#app.load.memory.chunks=150
#app.load.memory.chunk-size-mb=2
#app.load.db.write.extra-entries=20
#app.load.db.read.operations=50
#app.load.delay.external-calls=5
#app.load.delay.external-call-ms=500

# PRESET 4: EXTREME LOAD (May cause timeouts/OOM)
#app.load.cpu.fibonacci.count=10
#app.load.cpu.fibonacci.base=40
#app.load.memory.chunks=200
#app.load.memory.chunk-size-mb=3
#app.load.db.write.extra-entries=50
#app.load.db.read.operations=100
#app.load.delay.external-calls=10
#app.load.delay.external-call-ms=1000

# PRESET 5: CPU ONLY (Only CPU load, disable others for specific testing)
#app.load.cpu.fibonacci.count=10
#app.load.cpu.fibonacci.base=40

# PRESET 6: MEMORY ONLY (Only memory load)
#app.load.memory.chunks=300
#app.load.memory.chunk-size-mb=2

# PRESET 7: DATABASE ONLY (Only database load)
#app.load.db.write.extra-entries=50
#app.load.db.read.operations=100

# PRESET 8: BOTTLENECK TESTING (Minimal resources + heavy load)
#spring.datasource.hikari.maximum-pool-size=1
#server.tomcat.threads.max=2
#app.load.cpu.fibonacci.count=6
#app.load.memory.chunks=120
#app.load.db.write.extra-entries=15
#app.load.db.read.operations=30